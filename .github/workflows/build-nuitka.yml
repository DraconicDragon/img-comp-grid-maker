name: Build and Upload Binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  # Use the version that your script supports
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
          
      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Set up Nuitka environment
        run: |
          pip install nuitka
      
      - name: Modify TkinterPlugin.py
        run: |
          python -c "
          import os
          import fileinput
          import sys
          
          # Determine the file path based on the OS
          if sys.platform == 'darwin':
              # macOS
              file_path = '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nuitka/plugins/standard/TkinterPlugin.py'
          elif sys.platform == 'linux':
              # Linux
              file_path = '/usr/lib/python3.12/site-packages/nuitka/plugins/standard/TkinterPlugin.py'
          elif sys.platform == 'win32':
              # Windows
              file_path = 'C:\\Python\\Python312\\Lib\\site-packages\\nuitka\\plugins\\standard\\TkinterPlugin.py'
          else:
              raise EnvironmentError('Unsupported operating system')
          
          # Replacements dictionary
          replacements = {
              'osx64': 'osx-x64',
              'linux64': 'linux-x64',
              'win64': 'win-x64'
          }
          
          # Perform replacements in the file
          with fileinput.FileInput(file_path, inplace=True, backup='.bak') as file:
              for line in file:
                  for src, target in replacements.items():
                      line = line.replace(src, target)
                  sys.stdout.write(line)
          "
      
      - name: Build using Nuitka
        run: |
          nuitka --onefile --enable-plugin=tk-inter img_comp_grid_maker.py

      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            *.exe
            *.bin
            *.app/**/*
