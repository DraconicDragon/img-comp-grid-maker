name: Build and Upload Binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
    runs-on: ${{ matrix.os }}

    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.5'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
          
      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Set up Nuitka environment
        run: |
          pip install nuitka

# technically not needed
      - name: Install ccache (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y ccache

# technically not needed
      - name: Install ccache (macOS only)
        if: matrix.os == 'macos-13'
        run: |
          brew update
          brew install ccache
      
      - name: Modify TkinterPlugin.py
        run: |
          python -c "
          import os
          import fileinput
          import sys
          
          def find_file(filename):
              # Define the starting directory based on the OS
              if sys.platform == 'darwin':
              #    start_dir = '/'
                  absolute_dir = '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/nuitka/plugins/standard/TkinterPlugin.py'
              elif sys.platform == 'linux':
              #    start_dir = '/'
                  absolute_dir = '/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/nuitka/plugins/standard/TkinterPlugin.py'
              elif sys.platform == 'win32':
              #    start_dir = 'C:/'
                  absolute_dir = 'C:/hostedtoolcache/windows/Python/3.12.5/x64/Lib/site-packages/nuitka/plugins/standard/TkinterPlugin.py'
              
              #else:
              #    raise EnvironmentError('Unsupported operating system')
          
              # Walk through the file system starting from start_dir
              #for root, dirs, files in os.walk(start_dir):
              #    if filename in files:
              #        return os.path.join(root, filename)
          
              #raise FileNotFoundError(f'{filename} not found')
              
              return absolute_dir
          
          # Define the file name
          file_name = 'TkinterPlugin.py'
          
          # Find the file path
          file_path = find_file(file_name)
          
          # Replacements dictionary
          replacements = {
              'osx64': 'osx-x64',
              'linux64': 'linux-x64',
              'win64': 'win-x64'
          }
          
          # Perform replacements in the file
          with fileinput.FileInput(file_path, inplace=True, backup='.bak') as file:
              for line in file:
                  for src, target in replacements.items():
                      line = line.replace(src, target)
                  sys.stdout.write(line)
          "
          
      - name: Build using Nuitka
        run: |
          nuitka --onefile --enable-plugin=tk-inter --assume-yes-for-downloads img_comp_grid_maker.py

      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            *.exe
            *.bin
            *.app/**/*
